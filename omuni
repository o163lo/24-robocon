/*

2023/7/18 Obama Narito

4輪オムニの足回りをPS3コントローラで動かすためのプログラム
                前
    ０----------------------１
    |                       |
    |                       |
    |                       |
左  |        ロボット        |   右
    |                       |
    |                       |
    |                       |
    ３----------------------２
                後ろ
時計回りが正。

*/


// include
#include "mbed.h"

// define

// Step1: ピンを宣言しよう！
DigitalOut MD[4] = {
    DigitalOut(PA_5),  // use:モーター０回転方向制御 name:d13
    DigitalOut(PA_7),  // use:モーター１回転方向制御 name:d11
    DigitalOut(PC_7),  // use:モーター２回転方向制御 name:d9
    DigitalOut(PA_8)  // use:モーター３回転方向制御 name:d7
};

PwmOut MP[4] = {
    PwmOut(PA_6),  // use:モーター０回転速さ制御 ch:3/1 name:d12
    PwmOut(PB_6),  // use:モーター１回転速さ制御 ch:4/1 name:d10
    PwmOut(PA_9),  // use:モーター２回転速さ制御 ch:1/6 name:d8
    PwmOut(PB_10)  // use:モーター３回転速さ制御 ch:2/3 name:d6
};

RawSerial pc(USBTX, USBRX);  // use:PCと通信 pa2とpa3は使えなくなる

// 関数prototype宣言
void Config(void);  // 初期設定
void FourWheel(float speed_x, float speed_y);  // x方向とy方向の速さを指定すると足回りを動かしてくれるプログラム

// main関数
int main()
{
    Config();  // 初期設定

    while (true) {
        FourWheel(0.5, 0);  // 右に0.5の速さで進む
        ThisThread::sleep_for(2000);  // 0.5秒待つ
        FourWheel(0, 0.5);  // 前に0.5の速さで進む
        ThisThread::sleep_for(2000);  // 0.5秒待つ
        FourWheel(-0.7, 0);  // 左に0.7の速さで進む
        ThisThread::sleep_for(2000);  // 0.5秒待つ
        FourWheel(0, -0.7);  // 後ろに0.7の速さで進む
        ThisThread::sleep_for(2000);  // 0.5秒待つ
    }

}

// 初期設定
void Config(void)
{
    int i;

    //通信関係
    pc.baud(115200);

    for(i = 0; i < 4; i++){
        MD[i] = 0;
        MP[i] = 0;
        MP[i].period(0.0002);  // PWM周期を5kHzにする
    }
}

// x成分とy成分の速さを指定すると足回りを動かしてくれるプログラム
void FourWheel(float speed_x, float speed_y)
{
    int i;

    // Step2: それぞれのタイヤの回転数を計算しよう！
    float speed_tire[4];  // モータ０～３回転速度

    speed_tire[0] = speed_x + speed_y;
    speed_tire[1] = speed_x - speed_y;
    speed_tire[2] = -speed_x - speed_y;
    speed_tire[3] = -speed_x + speed_y;

    // Step3: タイヤの回転数から、タイヤを制御しよう！
    for(i = 0; i < 4; i++){
        // speed_tire[i] が負なら0, 正なら1をMD[i]に入れる
        MD[i] = 1;
        if(speed_tire[i] < 0){
            MD[i] = 0;
        }
        MP[i] = fabs(speed_tire[i]);  // M[i]の絶対値を取ってMP[i]に入れる
    }
}

